{
  "env": {
    "browser": true,
    "es2022": true
  },
  "extends": [
    "eslint:recommended",
    "next/core-web-vitals",
    "plugin:react/recommended",
    "plugin:@next/next/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:mdx/recommended"
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "react-hooks",
    "tailwindcss",
    "@typescript-eslint",
    "prettier"
  ],
  "rules": {
    "react/prop-types": 0,
    "react/no-children-prop": 0,
    "react/react-in-jsx-scope": 0,
    "react-hooks/exhaustive-deps": ["warn"], // hooks의 의존성배열이 충분하지 않을때 강제로 의존성을 추가하는 규칙을 완화
    "react/jsx-props-no-spreading": "off", // props spreading을 허용하지 않는 규칙 해제 [1, { "custom": "ignore" }]
    // "indent": ["error", 2],
    // "linebreak-style": ["error", "windows"],
    "linebreak-style": ["error", "unix"],
    // "quotes": ["error", "single"],
    "jsx-quotes": ["error", "prefer-single"],
    "no-console": "off",
    "no-unused-vars": "off", // 사용하지 않는 변수가 있을때 빌드에러가 나던 규칙 해제
    // "@typescript-eslint/no-unused-vars": [
    //   "error",
    //   { "vars": "all", "args": "after-used", "ignoreRestSiblings": false }
    // ],
    "@typescript-eslint/explicit-function-return-type": "off", // Consider using explicit annotations for object literals and function return types even when they can be inferred.
    "@typescript-eslint/no-explicit-any": 0,
    "no-empty": "warn",
    "prettier/prettier": 0,
    "import/prefer-default-export": ["off"], // export const 문을 쓸때 에러를 내는 규칙 해제
    "@typescript-eslint/ban-types": [
      "error",
      {
        "extendDefaults": true,
        "types": {
          "{}": false
        }
      }
    ],
    "no-shadow": 0,
    "jsx-a11y/no-noninteractive-element-interactions": 0,
    "react/jsx-filename-extension": [
      2,
      {"extensions": [".js", ".jsx", ".ts", ".tsx"]}
    ]
  },
  "parser": "@typescript-eslint/parser",
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx", ".js"]
    },
    "import/resolver": {
      "typescript": "./tsconfig.json"
    }
    // "mdx/code-blocks": true,
    // "mdx/language-mapper": {}
  }
}
